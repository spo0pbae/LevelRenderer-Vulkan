// "Pot3_Broken.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Pot3_Broken.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Pot3_Broken_version_
const char Pot3_Broken_version[4] = { '0','1','9','d' };
#define _Pot3_Broken_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Pot3_Broken_vertexcount_
const unsigned Pot3_Broken_vertexcount = 206;
#define _Pot3_Broken_vertexcount_
#endif
#ifndef _Pot3_Broken_indexcount_
const unsigned Pot3_Broken_indexcount = 564;
#define _Pot3_Broken_indexcount_
#endif
#ifndef _Pot3_Broken_materialcount_
const unsigned Pot3_Broken_materialcount = 1; // can be used for batched draws
#define _Pot3_Broken_materialcount_
#endif
#ifndef _Pot3_Broken_meshcount_
const unsigned Pot3_Broken_meshcount = 1;
#define _Pot3_Broken_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Pot3_Broken_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Pot3_Broken_vertices[206] =
{
	{	{ 0.231672f, 0.160520f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.999900f, -0.010500f, -0.000000f }	},
	{	{ 0.216354f, 0.050727f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.990600f, -0.136700f, -0.000000f }	},
	{	{ 0.199552f, 0.057541f, -0.088004f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.926100f, -0.135900f, -0.351900f }	},
	{	{ 0.213057f, 0.165327f, -0.093960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.933100f, -0.003500f, -0.359700f }	},
	{	{ 0.158165f, 0.060634f, -0.158165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.700300f, -0.138000f, -0.700300f }	},
	{	{ 0.168638f, 0.167521f, -0.168638f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.707300f, -0.000700f, -0.706900f }	},
	{	{ -0.000000f, 0.160520f, 0.231672f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000200f, -0.011200f, 0.999900f }	},
	{	{ -0.000000f, 0.050727f, 0.216354f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.136700f, 0.990600f }	},
	{	{ 0.088004f, 0.057541f, 0.199552f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.351900f, -0.135900f, 0.926100f }	},
	{	{ 0.093960f, 0.165327f, 0.213057f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.360000f, -0.003700f, 0.932900f }	},
	{	{ 0.158165f, 0.060634f, 0.158165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.700300f, -0.138000f, 0.700300f }	},
	{	{ 0.168638f, 0.167521f, 0.168638f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.707200f, -0.000200f, 0.707000f }	},
	{	{ -0.231672f, 0.160520f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.999900f, -0.010800f, -0.000000f }	},
	{	{ -0.216354f, 0.050727f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.990600f, -0.136700f, -0.000000f }	},
	{	{ -0.199552f, 0.057541f, 0.088004f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.926100f, -0.135900f, 0.351900f }	},
	{	{ -0.213057f, 0.165327f, 0.093960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.933000f, -0.003800f, 0.360000f }	},
	{	{ -0.158165f, 0.060634f, 0.158165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.700300f, -0.138000f, 0.700300f }	},
	{	{ -0.168638f, 0.167521f, 0.168638f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707000f, -0.000700f, 0.707200f }	},
	{	{ -0.000000f, 0.160520f, -0.231672f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.010600f, -0.999900f }	},
	{	{ -0.000000f, 0.050727f, -0.216354f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.136700f, -0.990600f }	},
	{	{ -0.088004f, 0.057541f, -0.199552f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.351900f, -0.135900f, -0.926100f }	},
	{	{ -0.093960f, 0.165327f, -0.213057f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.360100f, -0.003500f, -0.932900f }	},
	{	{ -0.158165f, 0.060634f, -0.158165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.700300f, -0.138000f, -0.700300f }	},
	{	{ -0.168638f, 0.167521f, -0.168638f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.707200f, -0.000500f, -0.707000f }	},
	{	{ -0.199552f, 0.057541f, -0.088004f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.926100f, -0.135900f, -0.351900f }	},
	{	{ -0.213057f, 0.165327f, -0.093960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.932800f, -0.003600f, -0.360400f }	},
	{	{ 0.199552f, 0.057541f, 0.088004f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.926100f, -0.135900f, 0.351900f }	},
	{	{ 0.213057f, 0.165327f, 0.093960f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.933000f, -0.003300f, 0.359800f }	},
	{	{ 0.088004f, 0.057541f, -0.199552f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.351900f, -0.135900f, -0.926100f }	},
	{	{ 0.093960f, 0.165327f, -0.213057f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.359900f, -0.003700f, -0.933000f }	},
	{	{ -0.088004f, 0.057541f, 0.199552f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.351900f, -0.135900f, 0.926100f }	},
	{	{ -0.093960f, 0.165327f, 0.213057f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.359400f, -0.003900f, 0.933200f }	},
	{	{ -0.077106f, 0.309885f, -0.174939f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.421700f, 0.904200f, -0.067900f }	},
	{	{ 0.000070f, 0.247390f, -0.197942f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.592400f, 0.789900f, -0.158500f }	},
	{	{ -0.000000f, 0.242676f, -0.221695f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.592400f, 0.789900f, -0.158500f }	},
	{	{ -0.086411f, 0.312648f, -0.195940f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.416100f, 0.907000f, -0.065000f }	},
	{	{ 0.000070f, 0.299642f, 0.191719f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.565100f, 0.823000f, -0.057100f }	},
	{	{ -0.080498f, 0.243701f, 0.182751f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.565100f, 0.823000f, -0.057100f }	},
	{	{ -0.090208f, 0.238545f, 0.204550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.565100f, 0.823000f, -0.057100f }	},
	{	{ 0.000000f, 0.301181f, 0.214590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.565100f, 0.823000f, -0.057100f }	},
	{	{ 0.177952f, 0.284443f, -0.078386f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.208500f, 0.872300f, 0.442300f }	},
	{	{ 0.199035f, 0.239624f, 0.000061f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.208500f, 0.872300f, 0.442300f }	},
	{	{ 0.222771f, 0.233981f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.208500f, 0.872300f, 0.442300f }	},
	{	{ 0.199166f, 0.284162f, -0.087834f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.208500f, 0.872300f, 0.442300f }	},
	{	{ 0.000070f, 0.247390f, -0.197942f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.593400f, 0.789800f, -0.155000f }	},
	{	{ 0.077247f, 0.309885f, -0.174939f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.593400f, 0.789800f, -0.155000f }	},
	{	{ 0.086411f, 0.312648f, -0.195940f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.593400f, 0.789800f, -0.155000f }	},
	{	{ -0.000000f, 0.242676f, -0.221695f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.593400f, 0.789800f, -0.155000f }	},
	{	{ 0.136895f, 0.322487f, 0.136885f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.476500f, 0.841100f, 0.256000f }	},
	{	{ 0.078939f, 0.276865f, 0.178898f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.476500f, 0.841100f, 0.256000f }	},
	{	{ 0.088306f, 0.275678f, 0.200236f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.476500f, 0.841100f, 0.256000f }	},
	{	{ 0.153196f, 0.326759f, 0.153196f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.476500f, 0.841100f, 0.256000f }	},
	{	{ -0.143691f, 0.250949f, 0.143823f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.340700f, 0.772100f, 0.536500f }	},
	{	{ -0.174710f, 0.310977f, 0.077141f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.340700f, 0.772100f, 0.536500f }	},
	{	{ -0.195693f, 0.313871f, 0.086302f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.340700f, 0.772100f, 0.536500f }	},
	{	{ -0.160963f, 0.246661f, 0.160963f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.340700f, 0.772100f, 0.536500f }	},
	{	{ 0.077247f, 0.309885f, -0.174939f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.301300f, 0.919500f, 0.252500f }	},
	{	{ 0.141050f, 0.279635f, -0.140919f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.147300f, 0.984400f, 0.096400f }	},
	{	{ 0.157849f, 0.278779f, -0.157849f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.144700f, 0.985000f, 0.093800f }	},
	{	{ 0.086411f, 0.312648f, -0.195940f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.301300f, 0.919500f, 0.252500f }	},
	{	{ 0.178428f, 0.280370f, 0.078719f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.221400f, 0.874400f, -0.431800f }	},
	{	{ 0.136895f, 0.322487f, 0.136885f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.231700f, 0.859000f, -0.456500f }	},
	{	{ 0.153196f, 0.326759f, 0.153196f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.231700f, 0.859000f, -0.456500f }	},
	{	{ 0.199699f, 0.279602f, 0.088069f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.220900f, 0.875000f, -0.430700f }	},
	{	{ -0.174710f, 0.310977f, -0.077018f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.052200f, 0.980800f, 0.187900f }	},
	{	{ -0.136754f, 0.322487f, -0.136763f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.133300f, 0.983500f, 0.122300f }	},
	{	{ -0.153196f, 0.326759f, -0.153196f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.133400f, 0.983500f, 0.122200f }	},
	{	{ -0.195693f, 0.313871f, -0.086302f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.051500f, 0.980600f, 0.189300f }	},
	{	{ -0.174710f, 0.310977f, 0.077141f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.064400f, 0.984400f, -0.163600f }	},
	{	{ -0.191666f, 0.299279f, 0.000061f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.064800f, 0.997900f, -0.000300f }	},
	{	{ -0.214679f, 0.300774f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.064800f, 0.997900f, 0.000200f }	},
	{	{ -0.195693f, 0.313871f, 0.086302f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.064400f, 0.984400f, -0.163600f }	},
	{	{ 0.199035f, 0.239624f, 0.000061f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.210400f, 0.889500f, -0.405600f }	},
	{	{ 0.222771f, 0.233981f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.210400f, 0.889500f, -0.405600f }	},
	{	{ 0.177952f, 0.284443f, -0.078386f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.016600f, 0.997600f, -0.066900f }	},
	{	{ 0.199166f, 0.284162f, -0.087834f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.016600f, 0.997600f, -0.066900f }	},
	{	{ -0.080498f, 0.243701f, 0.182751f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.023700f, 0.975200f, 0.220100f }	},
	{	{ -0.143691f, 0.250949f, 0.143823f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.023700f, 0.975200f, 0.220100f }	},
	{	{ -0.160963f, 0.246661f, 0.160963f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.023700f, 0.975200f, 0.220100f }	},
	{	{ -0.090208f, 0.238545f, 0.204550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.023700f, 0.975200f, 0.220100f }	},
	{	{ 0.078939f, 0.276865f, 0.178898f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.267300f, 0.961500f, -0.063800f }	},
	{	{ 0.000070f, 0.299642f, 0.191719f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.267300f, 0.961500f, -0.063800f }	},
	{	{ 0.000000f, 0.301181f, 0.214590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.267300f, 0.961500f, -0.063800f }	},
	{	{ 0.088306f, 0.275678f, 0.200236f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.267300f, 0.961500f, -0.063800f }	},
	{	{ -0.068916f, -0.000378f, 0.156269f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.286300f, -0.639100f, 0.713800f }	},
	{	{ -0.000000f, -0.000378f, 0.168544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.658300f, 0.752700f }	},
	{	{ -0.000000f, 0.050727f, 0.216354f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.658300f, 0.752700f }	},
	{	{ -0.088004f, 0.057541f, 0.199552f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.295900f, -0.637900f, 0.711000f }	},
	{	{ -0.068916f, -0.000378f, -0.156269f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.286300f, -0.639100f, -0.713800f }	},
	{	{ -0.124277f, -0.000378f, -0.124277f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.549800f, -0.628900f, -0.549800f }	},
	{	{ -0.158165f, 0.060634f, -0.158165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.549800f, -0.628900f, -0.549800f }	},
	{	{ -0.088004f, 0.057541f, -0.199552f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.295900f, -0.637900f, -0.711000f }	},
	{	{ 0.068916f, -0.000378f, -0.156269f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.286300f, -0.639100f, -0.713800f }	},
	{	{ -0.000000f, -0.000378f, -0.168544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.658300f, -0.752700f }	},
	{	{ -0.000000f, 0.050727f, -0.216354f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.658300f, -0.752700f }	},
	{	{ 0.088004f, 0.057541f, -0.199552f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.295900f, -0.637900f, -0.711000f }	},
	{	{ 0.156269f, -0.000378f, -0.068916f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.713800f, -0.639100f, -0.286300f }	},
	{	{ 0.124277f, -0.000378f, -0.124277f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.549800f, -0.628900f, -0.549800f }	},
	{	{ 0.158165f, 0.060634f, -0.158165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.549800f, -0.628900f, -0.549800f }	},
	{	{ 0.199552f, 0.057541f, -0.088004f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.711000f, -0.637900f, -0.295900f }	},
	{	{ -0.124277f, -0.000378f, 0.124277f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.549800f, -0.628900f, 0.549800f }	},
	{	{ -0.158165f, 0.060634f, 0.158165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.549800f, -0.628900f, 0.549800f }	},
	{	{ -0.156269f, -0.000378f, -0.068916f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.713800f, -0.639100f, -0.286300f }	},
	{	{ -0.168544f, -0.000378f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.752700f, -0.658300f, 0.000000f }	},
	{	{ -0.216354f, 0.050727f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.752700f, -0.658300f, 0.000000f }	},
	{	{ -0.199552f, 0.057541f, -0.088004f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.711000f, -0.637900f, -0.295900f }	},
	{	{ 0.168544f, -0.000378f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.752700f, -0.658300f, -0.000000f }	},
	{	{ 0.216354f, 0.050727f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.752700f, -0.658300f, -0.000000f }	},
	{	{ 0.068916f, -0.000378f, 0.156269f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.286300f, -0.639100f, 0.713800f }	},
	{	{ 0.124277f, -0.000378f, 0.124277f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.549800f, -0.628900f, 0.549800f }	},
	{	{ 0.158165f, 0.060634f, 0.158165f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.549800f, -0.628900f, 0.549800f }	},
	{	{ 0.088004f, 0.057541f, 0.199552f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.295900f, -0.637900f, 0.711000f }	},
	{	{ -0.156269f, -0.000378f, 0.068916f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.713800f, -0.639100f, 0.286300f }	},
	{	{ -0.199552f, 0.057541f, 0.088004f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.711000f, -0.637900f, 0.295900f }	},
	{	{ 0.156269f, -0.000378f, 0.068916f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.713800f, -0.639100f, 0.286300f }	},
	{	{ 0.199552f, 0.057541f, 0.088004f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.711000f, -0.637900f, 0.295900f }	},
	{	{ -0.068916f, -0.000378f, -0.156269f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.000000f, -0.000378f, -0.168544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.068916f, -0.000378f, -0.156269f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.124277f, -0.000378f, -0.124277f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.156269f, -0.000378f, -0.068916f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.168544f, -0.000378f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.156269f, -0.000378f, 0.068916f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.124277f, -0.000378f, -0.124277f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.124277f, -0.000378f, 0.124277f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.068916f, -0.000378f, 0.156269f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.000000f, -0.000378f, 0.168544f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.068916f, -0.000378f, 0.156269f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.156269f, -0.000378f, -0.068916f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.168544f, -0.000378f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.156269f, -0.000378f, 0.068916f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.124277f, -0.000378f, 0.124277f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.107072f, 0.044520f, 0.107045f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.139514f, 0.044520f, 0.061612f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.155609f, 0.044520f, 0.000173f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.139142f, 0.044520f, -0.061102f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.110318f, 0.044520f, -0.109945f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.061803f, 0.044520f, 0.139861f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.000199f, 0.044520f, 0.149875f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.060482f, 0.044520f, -0.136519f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.062732f, 0.044520f, 0.142871f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.112092f, 0.044520f, 0.112464f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.136320f, 0.044520f, 0.060379f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.149565f, 0.044520f, 0.000173f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.136320f, 0.044520f, -0.060033f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.106673f, 0.044520f, -0.106699f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ -0.060083f, 0.044520f, -0.136519f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.000199f, 0.044520f, -0.154486f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, 0.000000f }	},
	{	{ 0.107072f, 0.044520f, 0.107045f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.702100f, 0.160900f, -0.693700f }	},
	{	{ 0.061803f, 0.044520f, 0.139861f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.624900f, 0.160600f, -0.764000f }	},
	{	{ 0.078939f, 0.276865f, 0.178898f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.624900f, 0.160600f, -0.764000f }	},
	{	{ 0.136895f, 0.322487f, 0.136885f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703300f, 0.160900f, -0.692500f }	},
	{	{ 0.110318f, 0.044520f, -0.109945f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.851200f, 0.174900f, 0.494800f }	},
	{	{ 0.139142f, 0.044520f, -0.061102f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.896000f, 0.182600f, 0.404700f }	},
	{	{ 0.177952f, 0.284443f, -0.078386f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.888800f, 0.181400f, 0.420800f }	},
	{	{ 0.141050f, 0.279635f, -0.140919f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.851200f, 0.174900f, 0.494800f }	},
	{	{ 0.060482f, 0.044520f, -0.136519f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.391600f, 0.168800f, 0.904500f }	},
	{	{ 0.110318f, 0.044520f, -0.109945f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.429800f, 0.163900f, 0.887900f }	},
	{	{ 0.141050f, 0.279635f, -0.140919f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.429800f, 0.163900f, 0.887900f }	},
	{	{ 0.077247f, 0.309885f, -0.174939f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.396600f, 0.168200f, 0.902400f }	},
	{	{ 0.155609f, 0.044520f, 0.000173f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.931600f, 0.188500f, 0.310800f }	},
	{	{ 0.199035f, 0.239624f, 0.000061f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.931600f, 0.188500f, 0.310800f }	},
	{	{ 0.155609f, 0.044520f, 0.000173f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.934700f, 0.190400f, -0.300200f }	},
	{	{ 0.139514f, 0.044520f, 0.061612f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.866800f, 0.177800f, -0.465900f }	},
	{	{ 0.178428f, 0.280370f, 0.078719f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.840100f, 0.172700f, -0.514200f }	},
	{	{ 0.199035f, 0.239624f, 0.000061f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.934700f, 0.190400f, -0.300200f }	},
	{	{ -0.106673f, 0.044520f, -0.106699f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.700300f, 0.154100f, 0.697000f }	},
	{	{ -0.060083f, 0.044520f, -0.136519f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.452000f, 0.163400f, 0.876900f }	},
	{	{ -0.077106f, 0.309885f, -0.174939f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.481900f, 0.159800f, 0.861500f }	},
	{	{ -0.136754f, 0.322487f, -0.136763f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.701100f, 0.154100f, 0.696300f }	},
	{	{ 0.000199f, 0.044520f, 0.149875f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.046400f, 0.173200f, -0.983800f }	},
	{	{ -0.062732f, 0.044520f, 0.142871f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.288000f, 0.200000f, -0.936500f }	},
	{	{ -0.080498f, 0.243701f, 0.182751f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.260000f, 0.198200f, -0.945100f }	},
	{	{ 0.000070f, 0.299642f, 0.191719f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.058200f, 0.172400f, -0.983300f }	},
	{	{ 0.000199f, 0.044520f, -0.154486f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.353000f, 0.173700f, 0.919400f }	},
	{	{ 0.000070f, 0.247390f, -0.197942f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.353000f, 0.173700f, 0.919400f }	},
	{	{ -0.112092f, 0.044520f, 0.112464f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.522600f, 0.208800f, -0.826600f }	},
	{	{ -0.143691f, 0.250949f, 0.143823f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.522600f, 0.208800f, -0.826600f }	},
	{	{ -0.149565f, 0.044520f, 0.000173f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987100f, 0.159900f, -0.000100f }	},
	{	{ -0.136320f, 0.044520f, -0.060033f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.908100f, 0.155700f, 0.388700f }	},
	{	{ -0.174710f, 0.310977f, -0.077018f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.900900f, 0.155400f, 0.405200f }	},
	{	{ -0.191666f, 0.299279f, 0.000061f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.987100f, 0.159900f, 0.000100f }	},
	{	{ -0.112092f, 0.044520f, 0.112464f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923600f, 0.171600f, -0.342900f }	},
	{	{ -0.136320f, 0.044520f, 0.060379f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.944700f, 0.163900f, -0.283900f }	},
	{	{ -0.174710f, 0.310977f, 0.077141f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.948700f, 0.162200f, -0.271400f }	},
	{	{ -0.143691f, 0.250949f, 0.143823f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.923600f, 0.171600f, -0.342900f }	},
	{	{ 0.061803f, 0.044520f, 0.139861f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131800f, 0.166700f, -0.977200f }	},
	{	{ 0.078939f, 0.276865f, 0.178898f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.131800f, 0.166700f, -0.977200f }	},
	{	{ 0.000199f, 0.044520f, -0.154486f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.352900f, 0.173300f, 0.919500f }	},
	{	{ 0.000070f, 0.247390f, -0.197942f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.352900f, 0.173300f, 0.919500f }	},
	{	{ 0.000000f, 0.301181f, 0.214590f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.028000f, 0.122300f, 0.992100f }	},
	{	{ -0.090208f, 0.238545f, 0.204550f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.331400f, 0.125400f, 0.935100f }	},
	{	{ -0.160963f, 0.246661f, 0.160963f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.736700f, 0.132000f, 0.663300f }	},
	{	{ -0.000000f, 0.242676f, -0.221695f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.123500f, -0.992300f }	},
	{	{ 0.086411f, 0.312648f, -0.195940f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.373600f, 0.126900f, -0.918900f }	},
	{	{ 0.157849f, 0.278779f, -0.157849f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.685000f, 0.132200f, -0.716400f }	},
	{	{ 0.222771f, 0.233981f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.992300f, 0.123700f, -0.001900f }	},
	{	{ 0.199699f, 0.279602f, 0.088069f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.906200f, 0.128300f, 0.402800f }	},
	{	{ 0.153196f, 0.326759f, 0.153196f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.704000f, 0.133200f, 0.697600f }	},
	{	{ -0.214679f, 0.300774f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.992400f, 0.123200f, -0.000000f }	},
	{	{ -0.195693f, 0.313871f, -0.086302f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.920200f, 0.127100f, -0.370200f }	},
	{	{ -0.153196f, 0.326759f, -0.153196f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.702000f, 0.132700f, -0.699700f }	},
	{	{ -0.086411f, 0.312648f, -0.195940f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.404200f, 0.127800f, -0.905700f }	},
	{	{ -0.195693f, 0.313871f, 0.086302f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.940400f, 0.125300f, 0.316200f }	},
	{	{ 0.088306f, 0.275678f, 0.200236f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.365700f, 0.126900f, 0.922000f }	},
	{	{ 0.199166f, 0.284162f, -0.087834f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.916100f, 0.127500f, -0.380200f }	},
};
#define _Pot3_Broken_vertices_
#endif
#ifndef _Pot3_Broken_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Pot3_Broken_indices[564] =
{
	 0, 1, 2,
	 3, 0, 2,
	 2, 4, 5,
	 3, 2, 5,
	 6, 7, 8,
	 9, 6, 8,
	 8, 10, 11,
	 9, 8, 11,
	 12, 13, 14,
	 15, 12, 14,
	 14, 16, 17,
	 15, 14, 17,
	 18, 19, 20,
	 21, 18, 20,
	 20, 22, 23,
	 21, 20, 23,
	 23, 22, 24,
	 25, 23, 24,
	 24, 13, 12,
	 25, 24, 12,
	 11, 10, 26,
	 27, 11, 26,
	 26, 1, 0,
	 27, 26, 0,
	 5, 4, 28,
	 29, 5, 28,
	 28, 19, 18,
	 29, 28, 18,
	 17, 16, 30,
	 31, 17, 30,
	 30, 7, 6,
	 31, 30, 6,
	 32, 33, 34,
	 35, 32, 34,
	 36, 37, 38,
	 39, 36, 38,
	 40, 41, 42,
	 43, 40, 42,
	 44, 45, 46,
	 47, 44, 46,
	 48, 49, 50,
	 51, 48, 50,
	 52, 53, 54,
	 55, 52, 54,
	 56, 57, 58,
	 59, 56, 58,
	 60, 61, 62,
	 63, 60, 62,
	 64, 65, 66,
	 67, 64, 66,
	 68, 69, 70,
	 71, 68, 70,
	 72, 60, 63,
	 73, 72, 63,
	 57, 74, 75,
	 58, 57, 75,
	 69, 64, 67,
	 70, 69, 67,
	 65, 32, 35,
	 66, 65, 35,
	 76, 77, 78,
	 79, 76, 78,
	 80, 81, 82,
	 83, 80, 82,
	 84, 85, 86,
	 87, 84, 86,
	 88, 89, 90,
	 91, 88, 90,
	 92, 93, 94,
	 95, 92, 94,
	 96, 97, 98,
	 99, 96, 98,
	 100, 84, 87,
	 101, 100, 87,
	 93, 88, 91,
	 94, 93, 91,
	 102, 103, 104,
	 105, 102, 104,
	 97, 92, 95,
	 98, 97, 95,
	 106, 96, 99,
	 107, 106, 99,
	 89, 102, 105,
	 90, 89, 105,
	 108, 109, 110,
	 111, 108, 110,
	 112, 100, 101,
	 113, 112, 101,
	 114, 106, 107,
	 115, 114, 107,
	 85, 108, 111,
	 86, 85, 111,
	 109, 114, 115,
	 110, 109, 115,
	 103, 112, 113,
	 104, 103, 113,
	 116, 117, 118,
	 119, 116, 118,
	 120, 121, 122,
	 123, 120, 122,
	 123, 122, 124,
	 124, 125, 126,
	 124, 126, 127,
	 123, 124, 127,
	 118, 123, 127,
	 119, 118, 127,
	 128, 119, 127,
	 129, 128, 127,
	 130, 129, 127,
	 131, 130, 127,
	 132, 133, 134,
	 132, 134, 135,
	 132, 135, 136,
	 137, 132, 136,
	 138, 137, 136,
	 138, 136, 139,
	 140, 138, 139,
	 141, 140, 139,
	 142, 141, 139,
	 143, 142, 139,
	 144, 143, 139,
	 145, 144, 139,
	 146, 145, 139,
	 147, 146, 139,
	 148, 149, 150,
	 151, 148, 150,
	 152, 153, 154,
	 155, 152, 154,
	 156, 157, 158,
	 159, 156, 158,
	 153, 160, 161,
	 154, 153, 161,
	 162, 163, 164,
	 165, 162, 164,
	 166, 167, 168,
	 169, 166, 168,
	 163, 148, 151,
	 164, 163, 151,
	 170, 171, 172,
	 173, 170, 172,
	 167, 174, 175,
	 168, 167, 175,
	 171, 176, 177,
	 172, 171, 177,
	 178, 179, 180,
	 181, 178, 180,
	 182, 183, 184,
	 185, 182, 184,
	 183, 178, 181,
	 184, 183, 181,
	 179, 166, 169,
	 180, 179, 169,
	 186, 170, 173,
	 187, 186, 173,
	 188, 156, 159,
	 189, 188, 159,
	 6, 190, 191,
	 31, 6, 191,
	 191, 192, 17,
	 31, 191, 17,
	 18, 193, 194,
	 29, 18, 194,
	 194, 195, 5,
	 29, 194, 5,
	 0, 196, 197,
	 27, 0, 197,
	 197, 198, 11,
	 27, 197, 11,
	 12, 199, 200,
	 25, 12, 200,
	 200, 201, 23,
	 25, 200, 23,
	 23, 201, 202,
	 21, 23, 202,
	 202, 193, 18,
	 21, 202, 18,
	 17, 192, 203,
	 15, 17, 203,
	 203, 199, 12,
	 15, 203, 12,
	 11, 198, 204,
	 9, 11, 204,
	 204, 190, 6,
	 9, 204, 6,
	 5, 195, 205,
	 3, 5, 205,
	 205, 196, 0,
	 3, 205, 0,
};
#define _Pot3_Broken_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Pot3_Broken_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Pot3_Broken_materials[1] =
{
	{
		{{ 0.290143f, 0.197275f, 0.080225f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Pot_Main",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Pot3_Broken_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Pot3_Broken_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Pot3_Broken_batches[1][2] =
{
	{ 564, 0 },
};
#define _Pot3_Broken_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Pot3_Broken_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Pot3_Broken_meshes[1] =
{
	{
		"default",
		564,
		0,
		0,
	},
};
#define _Pot3_Broken_meshes_
#endif
