// "Stairs.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Stairs.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Stairs_version_
const char Stairs_version[4] = { '0','1','9','d' };
#define _Stairs_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Stairs_vertexcount_
const unsigned Stairs_vertexcount = 196;
#define _Stairs_vertexcount_
#endif
#ifndef _Stairs_indexcount_
const unsigned Stairs_indexcount = 483;
#define _Stairs_indexcount_
#endif
#ifndef _Stairs_materialcount_
const unsigned Stairs_materialcount = 1; // can be used for batched draws
#define _Stairs_materialcount_
#endif
#ifndef _Stairs_meshcount_
const unsigned Stairs_meshcount = 1;
#define _Stairs_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Stairs_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Stairs_vertices[196] =
{
	{	{ 0.642717f, 0.269385f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.642717f, 0.269385f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.269385f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.546190f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.546190f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.269385f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.269385f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.269385f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.642717f, 0.269385f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.642717f, 0.269385f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.557467f, 0.923215f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.002400f, -0.000000f }	},
	{	{ -0.557467f, 0.923215f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.002400f, -0.000000f }	},
	{	{ -0.557283f, 0.846302f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.002400f, -0.000000f }	},
	{	{ -0.557283f, 0.846302f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.002400f, -0.000000f }	},
	{	{ -0.557283f, -0.001824f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, -0.001824f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.269385f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.269385f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.703690f, -0.001641f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.703690f, 0.346298f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.642717f, 0.269385f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.642717f, -0.001824f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.157283f, 0.546190f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.546190f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.546190f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.546190f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.546190f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.546190f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.269385f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.269385f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.846302f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.846302f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.846302f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.846302f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.846302f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.846302f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.546190f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.546190f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.546190f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.546190f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.269385f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.157283f, -0.001824f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.243304f, -0.001824f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.243304f, 0.269385f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.242717f, 0.546190f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.157283f, 0.546190f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.157283f, 0.846302f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.557283f, 0.846302f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.846302f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.269385f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.557283f, -0.001824f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.557283f, 0.846302f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.557283f, 0.546190f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.557283f, 0.846302f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.846302f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.546190f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.242717f, 0.546190f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.242717f, 0.546190f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.242717f, 0.269385f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.642717f, 0.269385f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.642717f, 0.269385f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.557283f, -0.001824f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.557283f, -0.001824f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.157283f, -0.001824f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.157283f, -0.001824f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.242717f, -0.001824f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.242717f, -0.001824f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, 0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.243304f, -0.001824f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.157283f, -0.001824f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.703691f, -0.001641f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.003000f, -1.000000f, -0.000000f }	},
	{	{ 0.703690f, -0.001641f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.003000f, -1.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.003000f, -1.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.003000f, -1.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.557283f, -0.001824f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.557283f, -0.001824f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557467f, 0.923215f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.096310f, 0.923215f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.096310f, 0.923215f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.557467f, 0.923215f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.303690f, 0.623103f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.569000f, 0.822300f, 0.000000f }	},
	{	{ 0.703690f, 0.346298f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.569000f, 0.822300f, 0.000000f }	},
	{	{ 0.703691f, 0.346298f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.569000f, 0.822300f, 0.000000f }	},
	{	{ 0.303690f, 0.623103f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.569000f, 0.822300f, 0.000000f }	},
	{	{ -0.096310f, 0.923215f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.600100f, 0.799900f, -0.000000f }	},
	{	{ 0.303690f, 0.623103f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.600100f, 0.799900f, -0.000000f }	},
	{	{ 0.303690f, 0.623103f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.600100f, 0.799900f, -0.000000f }	},
	{	{ -0.096310f, 0.923215f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.600100f, 0.799900f, -0.000000f }	},
	{	{ 0.703691f, 0.346298f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.703690f, 0.346298f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.703690f, -0.001641f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.703691f, -0.001641f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.703691f, 0.346298f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557467f, 0.923215f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.096310f, 0.923215f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.157283f, 0.846302f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.557283f, 0.846302f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.303690f, 0.623103f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.096310f, 0.923215f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.303690f, 0.623103f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.703691f, 0.346298f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.703691f, -0.001641f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.642717f, -0.001824f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.557467f, 0.923215f, 0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.703691f, 0.346298f, 0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.642717f, -0.001824f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.642717f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.546190f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.546190f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.269385f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.642717f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.846302f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.002400f, -0.000000f }	},
	{	{ -0.557467f, 0.923215f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.002400f, -0.000000f }	},
	{	{ -0.557467f, 0.923215f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.002400f, -0.000000f }	},
	{	{ -0.557283f, 0.846302f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, -0.002400f, -0.000000f }	},
	{	{ -0.557283f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, -0.001824f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.642717f, 0.269385f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.703690f, 0.346298f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.703690f, -0.001641f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.642717f, -0.001824f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.242717f, 0.546190f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.546190f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.242717f, 0.546190f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.846302f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.846302f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.546190f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.846302f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.546190f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.243304f, -0.001824f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.157283f, -0.001824f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.157283f, 0.269385f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.243304f, 0.269385f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.157283f, 0.546190f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.242717f, 0.546190f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.157283f, 0.846302f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.557283f, 0.846302f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, 0.846302f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.557283f, -0.001824f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.557283f, 0.269385f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.557283f, 0.546190f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.557283f, 0.846302f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.557283f, 0.846302f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.157283f, 0.546190f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.242717f, 0.546190f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.242717f, 0.546190f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.242717f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.642717f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.642717f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.557283f, -0.001824f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.157283f, -0.001824f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.242717f, -0.001824f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.157283f, -0.001824f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.243304f, -0.001824f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.003000f, -1.000000f, -0.000000f }	},
	{	{ 0.703690f, -0.001641f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.003000f, -1.000000f, -0.000000f }	},
	{	{ 0.703691f, -0.001641f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.003000f, -1.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.003000f, -1.000000f, -0.000000f }	},
	{	{ 0.642717f, -0.001824f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.557283f, -0.001824f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.557283f, -0.001824f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.096310f, 0.923215f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.096310f, 0.923215f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.557467f, 0.923215f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.557467f, 0.923215f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.703691f, 0.346298f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.569000f, 0.822300f, 0.000000f }	},
	{	{ 0.703690f, 0.346298f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.569000f, 0.822300f, 0.000000f }	},
	{	{ 0.303690f, 0.623103f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.569000f, 0.822300f, 0.000000f }	},
	{	{ 0.303690f, 0.623103f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.569000f, 0.822300f, 0.000000f }	},
	{	{ 0.303690f, 0.623103f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.600100f, 0.799900f, -0.000000f }	},
	{	{ 0.303690f, 0.623103f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.600100f, 0.799900f, -0.000000f }	},
	{	{ -0.096310f, 0.923215f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.600100f, 0.799900f, -0.000000f }	},
	{	{ -0.096310f, 0.923215f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.600100f, 0.799900f, -0.000000f }	},
	{	{ -0.157283f, 0.846302f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.096310f, 0.923215f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.557467f, 0.923215f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.557283f, 0.846302f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.096310f, 0.923215f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.303690f, 0.623103f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.242717f, 0.546190f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.303690f, 0.623103f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.642717f, -0.001824f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.703691f, -0.001641f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.703691f, 0.346298f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.642717f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.557467f, 0.923215f, -0.984756f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.642717f, 0.269385f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.703691f, 0.346298f, -0.743712f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
};
#define _Stairs_vertices_
#endif
#ifndef _Stairs_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Stairs_indices[483] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 6,
	 7, 4, 6,
	 8, 9, 10,
	 11, 8, 10,
	 12, 13, 14,
	 15, 12, 14,
	 16, 17, 18,
	 19, 16, 18,
	 20, 21, 22,
	 23, 20, 22,
	 24, 25, 26,
	 27, 24, 26,
	 28, 29, 30,
	 31, 28, 30,
	 32, 33, 34,
	 35, 32, 34,
	 36, 37, 38,
	 39, 36, 38,
	 40, 41, 19,
	 18, 40, 19,
	 42, 43, 44,
	 45, 42, 44,
	 46, 47, 42,
	 45, 46, 42,
	 46, 48, 47,
	 5, 49, 50,
	 6, 5, 50,
	 22, 46, 45,
	 51, 52, 43,
	 42, 51, 43,
	 48, 53, 54,
	 47, 48, 54,
	 55, 56, 41,
	 40, 55, 41,
	 47, 54, 51,
	 42, 47, 51,
	 57, 58, 59,
	 60, 61, 62,
	 63, 64, 65,
	 66, 63, 65,
	 66, 65, 67,
	 68, 66, 67,
	 68, 67, 69,
	 70, 68, 69,
	 45, 44, 23,
	 22, 45, 23,
	 71, 72, 66,
	 68, 71, 66,
	 73, 74, 75,
	 76, 73, 75,
	 70, 77, 71,
	 68, 70, 71,
	 63, 66, 72,
	 78, 63, 72,
	 79, 4, 7,
	 17, 79, 7,
	 18, 17, 7,
	 80, 81, 82,
	 83, 80, 82,
	 84, 85, 86,
	 87, 84, 86,
	 88, 89, 90,
	 91, 88, 90,
	 92, 93, 94,
	 92, 94, 95,
	 96, 92, 95,
	 97, 98, 99,
	 100, 97, 99,
	 101, 102, 48,
	 46, 101, 48,
	 98, 103, 58,
	 99, 98, 58,
	 21, 101, 46,
	 22, 21, 46,
	 104, 105, 106,
	 62, 104, 106,
	 102, 107, 53,
	 48, 102, 53,
	 103, 108, 61,
	 58, 103, 61,
	 109, 110, 0,
	 3, 109, 0,
	 111, 112, 113,
	 114, 111, 113,
	 115, 116, 8,
	 11, 115, 8,
	 117, 118, 119,
	 120, 117, 119,
	 121, 122, 16,
	 19, 121, 16,
	 123, 124, 125,
	 126, 123, 125,
	 127, 128, 24,
	 27, 127, 24,
	 129, 130, 28,
	 31, 129, 28,
	 131, 132, 32,
	 35, 131, 32,
	 133, 134, 36,
	 39, 133, 36,
	 19, 41, 135,
	 121, 19, 135,
	 136, 137, 138,
	 139, 136, 138,
	 138, 140, 141,
	 139, 138, 141,
	 141, 140, 142,
	 143, 144, 112,
	 111, 143, 112,
	 123, 139, 141,
	 137, 145, 146,
	 138, 137, 146,
	 147, 148, 142,
	 140, 147, 142,
	 41, 56, 149,
	 135, 41, 149,
	 146, 147, 140,
	 138, 146, 140,
	 150, 151, 152,
	 153, 154, 155,
	 65, 64, 156,
	 157, 65, 156,
	 67, 65, 157,
	 158, 67, 157,
	 69, 67, 158,
	 159, 69, 158,
	 126, 136, 139,
	 123, 126, 139,
	 157, 160, 161,
	 158, 157, 161,
	 162, 163, 164,
	 165, 162, 164,
	 161, 166, 159,
	 158, 161, 159,
	 160, 157, 156,
	 167, 160, 156,
	 114, 113, 168,
	 114, 168, 122,
	 121, 114, 122,
	 169, 170, 171,
	 172, 169, 171,
	 173, 174, 175,
	 176, 173, 175,
	 177, 178, 179,
	 180, 177, 179,
	 181, 182, 183,
	 184, 181, 183,
	 142, 185, 186,
	 141, 142, 186,
	 187, 188, 182,
	 181, 187, 182,
	 141, 186, 124,
	 123, 141, 124,
	 189, 190, 191,
	 192, 189, 191,
	 148, 193, 185,
	 142, 148, 185,
	 194, 195, 188,
	 187, 194, 188,
};
#define _Stairs_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Stairs_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Stairs_materials[1] =
{
	{
		{{ 0.287072f, 0.287072f, 0.287072f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Rock",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Stairs_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Stairs_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Stairs_batches[1][2] =
{
	{ 483, 0 },
};
#define _Stairs_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Stairs_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Stairs_meshes[1] =
{
	{
		"default",
		483,
		0,
		0,
	},
};
#define _Stairs_meshes_
#endif
