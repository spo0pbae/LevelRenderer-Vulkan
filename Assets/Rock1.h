// "Rock1.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Rock1.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Rock1_version_
const char Rock1_version[4] = { '0','1','9','d' };
#define _Rock1_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Rock1_vertexcount_
const unsigned Rock1_vertexcount = 72;
#define _Rock1_vertexcount_
#endif
#ifndef _Rock1_indexcount_
const unsigned Rock1_indexcount = 72;
#define _Rock1_indexcount_
#endif
#ifndef _Rock1_materialcount_
const unsigned Rock1_materialcount = 1; // can be used for batched draws
#define _Rock1_materialcount_
#endif
#ifndef _Rock1_meshcount_
const unsigned Rock1_meshcount = 1;
#define _Rock1_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Rock1_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Rock1_vertices[72] =
{
	{	{ 0.059462f, -0.035526f, 0.255500f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.078200f, 0.695800f, -0.713900f }	},
	{	{ -0.029755f, 0.131436f, 0.428009f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.078200f, 0.695800f, -0.713900f }	},
	{	{ 0.205612f, 0.127464f, 0.398346f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.078200f, 0.695800f, -0.713900f }	},
	{	{ 0.205612f, 0.127464f, 0.398346f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.450000f, 0.325400f, -0.831600f }	},
	{	{ 0.227025f, -0.025636f, 0.350037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.450000f, 0.325400f, -0.831600f }	},
	{	{ 0.059462f, -0.035526f, 0.255500f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.450000f, 0.325400f, -0.831600f }	},
	{	{ 0.059462f, -0.035526f, 0.255500f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.323400f, 0.590900f, -0.739100f }	},
	{	{ -0.257378f, -0.021056f, 0.405687f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.323400f, 0.590900f, -0.739100f }	},
	{	{ -0.029755f, 0.131436f, 0.428009f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.323400f, 0.590900f, -0.739100f }	},
	{	{ 0.059462f, -0.035526f, 0.255500f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.002100f, -0.995000f, 0.100300f }	},
	{	{ 0.227025f, -0.025636f, 0.350037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.002100f, -0.995000f, 0.100300f }	},
	{	{ -0.257378f, -0.021056f, 0.405687f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.002100f, -0.995000f, 0.100300f }	},
	{	{ -0.029755f, 0.131436f, 0.428009f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.082300f, 0.837200f, 0.540700f }	},
	{	{ 0.000685f, -0.013903f, 0.648395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.082300f, 0.837200f, 0.540700f }	},
	{	{ 0.205612f, 0.127464f, 0.398346f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.082300f, 0.837200f, 0.540700f }	},
	{	{ -0.257378f, -0.021056f, 0.405687f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.509600f, 0.684300f, 0.521600f }	},
	{	{ 0.000685f, -0.013903f, 0.648395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.509600f, 0.684300f, 0.521600f }	},
	{	{ -0.029755f, 0.131436f, 0.428009f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.509600f, 0.684300f, 0.521600f }	},
	{	{ 0.227025f, -0.025636f, 0.350037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.005400f, -0.999400f, 0.035200f }	},
	{	{ 0.000685f, -0.013903f, 0.648395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.005400f, -0.999400f, 0.035200f }	},
	{	{ -0.257378f, -0.021056f, 0.405687f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.005400f, -0.999400f, 0.035200f }	},
	{	{ 0.205612f, 0.127464f, 0.398346f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.792600f, -0.079900f, 0.604400f }	},
	{	{ 0.000685f, -0.013903f, 0.648395f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.792600f, -0.079900f, 0.604400f }	},
	{	{ 0.227025f, -0.025636f, 0.350037f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.792600f, -0.079900f, 0.604400f }	},
	{	{ 0.300120f, -0.027070f, -0.400600f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.007600f, 0.129700f, -0.991500f }	},
	{	{ -0.201251f, 0.193484f, -0.375596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.007600f, 0.129700f, -0.991500f }	},
	{	{ 0.165476f, 0.276854f, -0.361873f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.007600f, 0.129700f, -0.991500f }	},
	{	{ 0.300120f, -0.027070f, -0.400600f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007800f, -0.999200f, 0.039300f }	},
	{	{ 0.341627f, -0.011526f, 0.002968f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007800f, -0.999200f, 0.039300f }	},
	{	{ -0.518960f, -0.004506f, 0.010935f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007800f, -0.999200f, 0.039300f }	},
	{	{ 0.032882f, 0.381353f, 0.132690f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.542500f, 0.146600f, 0.827100f }	},
	{	{ -0.028321f, -0.027766f, 0.245363f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.542500f, 0.146600f, 0.827100f }	},
	{	{ 0.232512f, 0.277790f, 0.020116f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.542500f, 0.146600f, 0.827100f }	},
	{	{ -0.166675f, 0.321238f, 0.001176f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.586200f, 0.295500f, 0.754400f }	},
	{	{ -0.028321f, -0.027766f, 0.245363f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.586200f, 0.295500f, 0.754400f }	},
	{	{ 0.032882f, 0.381353f, 0.132690f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.586200f, 0.295500f, 0.754400f }	},
	{	{ -0.518960f, -0.004506f, 0.010935f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.373000f, 0.428100f, 0.823200f }	},
	{	{ -0.028321f, -0.027766f, 0.245363f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.373000f, 0.428100f, 0.823200f }	},
	{	{ -0.166675f, 0.321238f, 0.001176f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.373000f, 0.428100f, 0.823200f }	},
	{	{ 0.341627f, -0.011526f, 0.002968f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.008900f, -0.996700f, -0.080300f }	},
	{	{ -0.028321f, -0.027766f, 0.245363f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.008900f, -0.996700f, -0.080300f }	},
	{	{ -0.518960f, -0.004506f, 0.010935f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.008900f, -0.996700f, -0.080300f }	},
	{	{ 0.232512f, 0.277790f, 0.020116f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.536900f, 0.153300f, 0.829600f }	},
	{	{ -0.028321f, -0.027766f, 0.245363f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.536900f, 0.153300f, 0.829600f }	},
	{	{ 0.341627f, -0.011526f, 0.002968f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.536900f, 0.153300f, 0.829600f }	},
	{	{ -0.275048f, -0.026995f, -0.510737f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.777900f, 0.496500f, -0.385100f }	},
	{	{ -0.518960f, -0.004506f, 0.010935f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.777900f, 0.496500f, -0.385100f }	},
	{	{ -0.201251f, 0.193484f, -0.375596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.777900f, 0.496500f, -0.385100f }	},
	{	{ 0.165476f, 0.276854f, -0.361873f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.201000f, 0.933200f, -0.298000f }	},
	{	{ -0.201251f, 0.193484f, -0.375596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.201000f, 0.933200f, -0.298000f }	},
	{	{ -0.166675f, 0.321238f, 0.001176f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.201000f, 0.933200f, -0.298000f }	},
	{	{ 0.300120f, -0.027070f, -0.400600f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007700f, -0.999200f, 0.039500f }	},
	{	{ -0.518960f, -0.004506f, 0.010935f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007700f, -0.999200f, 0.039500f }	},
	{	{ -0.275048f, -0.026995f, -0.510737f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.007700f, -0.999200f, 0.039500f }	},
	{	{ -0.166675f, 0.321238f, 0.001176f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.132400f, 0.962000f, -0.238800f }	},
	{	{ 0.032882f, 0.381353f, 0.132690f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.132400f, 0.962000f, -0.238800f }	},
	{	{ 0.165476f, 0.276854f, -0.361873f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.132400f, 0.962000f, -0.238800f }	},
	{	{ 0.165476f, 0.276854f, -0.361873f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.424700f, 0.902100f, -0.076700f }	},
	{	{ 0.032882f, 0.381353f, 0.132690f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.424700f, 0.902100f, -0.076700f }	},
	{	{ 0.232512f, 0.277790f, 0.020116f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.424700f, 0.902100f, -0.076700f }	},
	{	{ -0.201251f, 0.193484f, -0.375596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.670200f, 0.719400f, -0.182400f }	},
	{	{ -0.518960f, -0.004506f, 0.010935f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.670200f, 0.719400f, -0.182400f }	},
	{	{ -0.166675f, 0.321238f, 0.001176f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.670200f, 0.719400f, -0.182400f }	},
	{	{ -0.275048f, -0.026995f, -0.510737f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.165600f, 0.474500f, -0.864500f }	},
	{	{ -0.201251f, 0.193484f, -0.375596f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.165600f, 0.474500f, -0.864500f }	},
	{	{ 0.300120f, -0.027070f, -0.400600f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.165600f, 0.474500f, -0.864500f }	},
	{	{ 0.300120f, -0.027070f, -0.400600f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.903600f, 0.414200f, -0.108900f }	},
	{	{ 0.165476f, 0.276854f, -0.361873f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.903600f, 0.414200f, -0.108900f }	},
	{	{ 0.341627f, -0.011526f, 0.002968f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.903600f, 0.414200f, -0.108900f }	},
	{	{ 0.341627f, -0.011526f, 0.002968f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.920000f, 0.356600f, -0.162300f }	},
	{	{ 0.165476f, 0.276854f, -0.361873f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.920000f, 0.356600f, -0.162300f }	},
	{	{ 0.232512f, 0.277790f, 0.020116f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.920000f, 0.356600f, -0.162300f }	},
};
#define _Rock1_vertices_
#endif
#ifndef _Rock1_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Rock1_indices[72] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 15, 16, 17,
	 18, 19, 20,
	 21, 22, 23,
	 24, 25, 26,
	 27, 28, 29,
	 30, 31, 32,
	 33, 34, 35,
	 36, 37, 38,
	 39, 40, 41,
	 42, 43, 44,
	 45, 46, 47,
	 48, 49, 50,
	 51, 52, 53,
	 54, 55, 56,
	 57, 58, 59,
	 60, 61, 62,
	 63, 64, 65,
	 66, 67, 68,
	 69, 70, 71,
};
#define _Rock1_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Rock1_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Rock1_materials[1] =
{
	{
		{{ 0.287072f, 0.287072f, 0.287072f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Rock",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Rock1_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Rock1_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Rock1_batches[1][2] =
{
	{ 72, 0 },
};
#define _Rock1_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Rock1_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Rock1_meshes[1] =
{
	{
		"default",
		72,
		0,
		0,
	},
};
#define _Rock1_meshes_
#endif
